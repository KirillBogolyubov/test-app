{"ast":null,"code":"import { computed, ref } from \"vue\";\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const price = ref(0);\n    const quantity = ref(0);\n    const amount = ref(0);\n    const counter = ref(0);\n    const events = ref([]);\n    const previewData = ref({});\n    const localStorageData = computed(() => {\n      return JSON.parse(localStorage.getItem('data') || '{}');\n    });\n    const calculateFields = changedField => {\n      setTimeout(() => {\n        if (changedField === 'price' || changedField === 'quantity') {\n          amount.value = price.value * quantity.value;\n        } else if (changedField === 'amount') {\n          if (price.value) {\n            quantity.value = amount.value / price.value;\n          } else if (quantity.value) {\n            price.value = amount.value / quantity.value;\n          }\n        }\n      }, 300);\n      saveEvent(`Изменено поле: ${changedField}`, {\n        price: price.value,\n        quantity: quantity.value,\n        amount: amount.value\n      });\n    };\n    const saveEvent = (message, data = null) => {\n      const event = {\n        message,\n        data\n      };\n      events.value.unshift(event);\n    };\n    const postAmount = () => {\n      const data = {\n        counter: counter.value++,\n        price: price.value,\n        quantity: quantity.value,\n        amount: amount.value\n      };\n      previewData.value = data.value;\n      serverRequest(data).then(res => {\n        console.log(res);\n        localStorage.setItem('data', JSON.stringify(data));\n      }).catch(err => {\n        throw new Error(err.message);\n      });\n    };\n    const serverRequest = data => {\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const isSuccessRequest = data.amount % 2 === 0;\n          if (isSuccessRequest) {\n            resolve({\n              success: true\n            });\n          } else {\n            reject({\n              success: false\n            });\n          }\n        }, 1000);\n      });\n    };\n    const __returned__ = {\n      price,\n      quantity,\n      amount,\n      counter,\n      events,\n      previewData,\n      localStorageData,\n      calculateFields,\n      saveEvent,\n      postAmount,\n      serverRequest,\n      computed,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","ref","price","quantity","amount","counter","events","previewData","localStorageData","JSON","parse","localStorage","getItem","calculateFields","changedField","setTimeout","value","saveEvent","message","data","event","unshift","postAmount","serverRequest","then","res","console","log","setItem","stringify","catch","err","Error","Promise","resolve","reject","isSuccessRequest","success"],"sources":["/Users/kirill/WebstormProjects/test-app/src/App.vue"],"sourcesContent":["<template>\n  <section>\n    <form class=\"form\">\n      <div class=\"form__input\">\n        <input id=\"price\" v-model=\"price\" type=\"number\" @input=\"calculateFields('price')\" />\n        <label for=\"price\">Цена</label>\n      </div>\n      <div class=\"form__input\">\n        <input id=\"quantity\" v-model=\"quantity\" type=\"number\" @input=\"calculateFields('quantity')\" />\n        <label for=\"quantity\">Количество</label>\n      </div>\n      <div class=\"form__input\">\n        <input id=\"amount\" v-model=\"amount\" @input=\"calculateFields('amount')\" />\n        <label for=\"amount\">Сумма</label>\n      </div>\n      <button @click.stop.prevent=\"postAmount\">Отправить</button>\n    </form>\n    <div>preview data {{previewData}} </div>\n    <div>localStorage: {{localStorageData}}</div>\n    <div v-for=\"(item, index) in events\" :key=\"index\">{{item.message}}</div>\n  </section>\n</template>\n\n<script setup>\nimport {computed, ref} from \"vue\";\n\nconst price = ref(0);\nconst quantity = ref(0);\nconst amount = ref(0);\nconst counter = ref(0);\nconst events = ref([]);\nconst previewData = ref({})\nconst localStorageData = computed(() => {\n  return JSON.parse(localStorage.getItem('data') || '{}')\n});\n\n\nconst calculateFields = (changedField) => {\n  setTimeout(() => {\n    if (changedField === 'price' || changedField === 'quantity') {\n      amount.value = price.value * quantity.value\n    }\n    else if (changedField === 'amount') {\n      if (price.value) {\n        quantity.value = amount.value / price.value\n      } else if (quantity.value) {\n        price.value = amount.value / quantity.value\n      }\n    }\n  }, 300)\n  saveEvent(`Изменено поле: ${changedField}`, {\n    price: price.value,\n    quantity: quantity.value,\n    amount: amount.value\n  })\n}\n\nconst saveEvent = (message, data = null) => {\n  const event = {\n    message,\n    data\n  }\n  events.value.unshift(event)\n}\n\nconst postAmount = () => {\n  const data = {\n    counter: counter.value++,\n    price: price.value,\n    quantity: quantity.value,\n    amount: amount.value,\n  }\n  previewData.value = data.value\n\n  serverRequest(data).then(res => {\n    console.log(res)\n    localStorage.setItem('data', JSON.stringify(data))\n  }).catch(err => {\n    throw new Error(err.message)\n  })\n\n}\n\nconst serverRequest = (data) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const isSuccessRequest = data.amount % 2 === 0\n\n      if (isSuccessRequest) {\n        resolve({success: true})\n      } else {\n        reject({success: false})\n      }\n    }, 1000)\n  })\n}\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n.form {\n  display: flex;\n  column-gap: 10px;\n  margin-bottom: 20px;\n\n  &__input {\n    display: flex;\n    flex-direction: column;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}